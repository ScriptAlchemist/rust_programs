var searchIndex = JSON.parse('{\
"temps":{"doc":"","t":"NNNEDLLLLLLLLLLLLLLMLLLLLL","n":["Celsius","Fahrenheit","Kelvin","TempType","Temperature","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","into","into","new","switch_to_celsius","switch_to_fahrenheit","switch_to_kelvin","t","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["temps","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","TempType is the temperature type with a f64 value for the …","Temperature structure with internal temp t.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new temp structure with an internal temperature …","Convert your existing Temperature into Celsius","Convert your existing Temperature into Fahrenheit","Convert your existing Temperature into Kelvin","","","","","","",""],"i":[1,1,1,0,0,1,4,1,4,1,4,1,4,1,4,4,4,4,4,4,1,4,1,4,1,4],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2],3],[[4,2],3],[[]],[[]],[[]],[[]],[1,4],[4,4],[4,4],[4,4],0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6]],"p":[[4,"TempType"],[3,"Formatter"],[6,"Result"],[3,"Temperature"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
